/* ELM                                                                        */
/* Copyright (C) 2024  Miles McGruder                                         */
/*                                                                            */
/* This program is free software: you can redistribute it and/or modify       */
/* it under the terms of the GNU General Public License as published by       */
/* the Free Software Foundation, either version 3 of the License, or          */
/* (at your option) any later version.                                        */
/*                                                                            */
/* This program is distributed in the hope that it will be useful,            */
/* but WITHOUT ANY WARRANTY; without even the implied warranty of             */
/* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              */
/* GNU General Public License for more details.                               */
/*                                                                            */
/* You should have received a copy of the GNU General Public License          */
/* along with this program.  If not, see <https://www.gnu.org/licenses/>.     */


#version 450


#include "data_structures.glsl"


layout(local_size_x = 128) in;


layout(std430, set = 0, binding = 0) buffer state_params {
  uint p;
  uint q;
  uint nelem;
  uint etype;
  uint dim;
  uint nbfp;
  uint nbfq;
  float gamma;
} params;
layout(std430, set = 0, binding = 1) buffer bbox_data   { aabb  bboxes[]; };
layout(std430, set = 0, binding = 2) buffer bbox_pnts_x { float xpnts[];  };
layout(std430, set = 0, binding = 3) buffer bbox_pnts_y { float ypnts[];  };
layout(std430, set = 0, binding = 4) buffer bbox_pnts_z { float zpnts[];  };


void main()
{
  uint elem = gl_GlobalInvocationID.x;

  if (elem < params.nelem)
  {
    aabb box = bboxes[elem];

    xpnts[elem]                = box.l.x;
    ypnts[elem]                = box.l.y;
    zpnts[elem]                = box.l.z;
    xpnts[params.nelem + elem] = box.h.x;
    ypnts[params.nelem + elem] = box.h.y;
    zpnts[params.nelem + elem] = box.h.z;
  }
}
